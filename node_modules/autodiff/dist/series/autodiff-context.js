"use strict";
exports.__esModule = true;
var pool_1 = require("./pool");
var series_1 = require("./series");
var series2d_1 = require("./series2d");
function newSeries() {
    return new series_1.Series();
}
function clearSeries(s) {
    for (var i = 0; i < s.coefficients.length; i++) {
        s.coefficients[i] = 0;
    }
}
function copySeries(to, from) {
    for (var i = 0; i < to.coefficients.length; i++) {
        to.coefficients[i] = from.coefficients[i];
    }
}
function newSeries2D() {
    return new series2d_1.Series2D();
}
function clearSeries2D(s) {
    for (var i = 0; i < s.coefficients.length; i++) {
        s.coefficients[i] = 0;
    }
}
function copySeries2D(to, from) {
    for (var i = 0; i < to.coefficients.length; i++) {
        to.coefficients[i] = from.coefficients[i];
    }
}
var AutodiffContext = (function () {
    function AutodiffContext(opts) {
        this._numDerivativesToCompute = 3;
        this.seriesPool = new pool_1.Pool(newSeries, clearSeries, copySeries);
        this.series2DPool = new pool_1.Pool(newSeries2D, clearSeries2D, copySeries2D);
        this._numDerivativesToCompute = opts.numDerivativesToCompute;
    }
    AutodiffContext.prototype.setNumberOfDerivativesToCompute = function (n) {
        if (n !== this._numDerivativesToCompute) {
            this.seriesPool.forgetFreeElements();
            this.series2DPool.forgetFreeElements();
        }
        this._numDerivativesToCompute = n;
    };
    AutodiffContext.prototype.numDerivativesToCompute = function () {
        return this._numDerivativesToCompute;
    };
    return AutodiffContext;
}());
exports.AutodiffContext = AutodiffContext;
exports.defaultContext = new AutodiffContext({
    numDerivativesToCompute: 5
});
