export declare const ERROR_NAME_PARSER = "ParserError";
export declare class ParserError extends Error {
    message: string;
    name: string;
    constructor(message: string);
}
export declare function isParserError(err: Error): err is ParserError;
export declare module ErrorMsg {
    const genericFailure = "Couldn't parse that expression";
    const emptyParens = "The expression contains an empty set of parentheses like (); this is not valid syntax";
    const missingRightParen = "The expression is missing a right parenthesis";
    const nonIdentifierFunctionName = "It looks like you're trying to call something that isn't a function";
    const invalidArgument: (functionName: string) => string;
    const operatorMissingRightOperand: (operator: string) => string;
    const invalidCharacter: (s: string) => string;
}
