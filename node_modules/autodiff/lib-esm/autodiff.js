export { toValueAndDerivatives, } from './series/series';
import { buildSingleVariableAutodiffFunctionForExpression, buildTwoVariableAutodiffFunctionForExpression, } from './code-generation/code-generator';
import { parseExpression } from './parser/expression-parser';
import { defaultContext } from './series/autodiff-context';
export function setNumberOfDerivativesToCompute(n) {
    defaultContext.setNumberOfDerivativesToCompute(n);
}
export function compileFunction(independentVariable, exprString) {
    var _a = parseExpression(exprString), expression = _a.expression, userReadableError = _a.userReadableError;
    if (userReadableError) {
        throw new Error(userReadableError);
    }
    return buildSingleVariableAutodiffFunctionForExpression(expression, independentVariable);
}
export function compileTwoVariableFunction(firstIndependentVariable, secondIndependentVariable, exprString) {
    var _a = parseExpression(exprString), expression = _a.expression, userReadableError = _a.userReadableError;
    if (userReadableError) {
        throw new Error(userReadableError);
    }
    return buildTwoVariableAutodiffFunctionForExpression(expression, [
        firstIndependentVariable,
        secondIndependentVariable,
    ]);
}
