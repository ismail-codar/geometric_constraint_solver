export declare function variableEvaluatedAtPoint(value: number): Series;
export declare function constantValue(value: number): Series;
export declare class Series {
    isFree: boolean;
    coefficients: number[];
    constructor();
    freeToPool(): void;
}
export declare function toValueAndDerivatives(s: Series): number[];
export declare type SeriesOrNumber = Series | number;
export declare function add(a: SeriesOrNumber, b: SeriesOrNumber): Series;
export declare function negative(a: SeriesOrNumber): Series;
export declare function subtract(a: SeriesOrNumber, b: SeriesOrNumber): Series;
export declare function multiply(aInput: SeriesOrNumber, bInput: SeriesOrNumber): Series;
export declare function divide(aInput: SeriesOrNumber, bInput: SeriesOrNumber): Series;
export declare function sqrt(aInput: SeriesOrNumber): Series;
export declare function exp(aInput: SeriesOrNumber): Series;
export declare function log(aInput: SeriesOrNumber): Series;
export declare function pow(a: SeriesOrNumber, b: SeriesOrNumber): Series;
export declare function sin(a: SeriesOrNumber): Series;
export declare function cos(a: SeriesOrNumber): Series;
export declare function tan(aInput: SeriesOrNumber): Series;
export declare function asin(aInput: SeriesOrNumber): Series;
export declare function acos(aInput: SeriesOrNumber): Series;
export declare function atan(aInput: SeriesOrNumber): Series;
