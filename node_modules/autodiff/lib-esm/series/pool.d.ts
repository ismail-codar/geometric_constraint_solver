export interface Freeable {
    isFree: boolean;
}
export declare class Pool<T extends Freeable> {
    private _newT;
    private _clearT;
    private _copyT;
    private _free;
    private _trackedAllocations;
    constructor(_newT: () => T, _clearT: (t: T) => void, _copyT: (to: T, from: T) => void);
    trackAndReleaseAllocations(callback: () => void): void;
    allocate(): T;
    allocateCopy(s: T): T;
    markFree(series: T): void;
    forgetFreeElements(): void;
}
